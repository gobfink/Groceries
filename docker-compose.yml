version: '3.2'
services:
  splash-middleware:
     hostname: splash-middleware
     image: scrapinghub/splash
     ports:
     - "5023:5023"
     - "8050:8050"
     - "8051:8051"
     networks:
     - backend
  selenium-middleware:
     hostname: selenium-middleware
     image: selenium/standalone-firefox
     ports:
     - "4444:4444"
     networks:
     - backend
  scrapy:
     volumes:
     - ./scrapy/code:/code
     -  /tmp/.X11-unix:/tmp/.X11-unix
     build: 
       context: scrapy/
       dockerfile: Dockerfile.debug
     hostname: scrapy
     environment: 
        - "DISPLAY"
        - "PYTHONPATH=/code/groceries/groceries"
     depends_on:
     -  splash-middleware
     -  selenium-middleware
     -  db
     -  adminer
     networks:
     - backend
     entrypoint:
     - "/bin/bash"
     working_dir: /code/groceries/groceries/spiders/wegmans
  lidl:
    volumes:
    - ./scrapy/code:/code
    build: 
      context: scrapy/
      dockerfile: Dockerfile.runtime
    hostname: lidl-scrapy
    depends_on:
    - splash-middleware
    - db
    - adminer
    networks:
    - backend
    working_dir: /code/groceries/groceries/spiders/lidl
    entrypoint: "/usr/local/bin/scrapy runspider scraper.py"
    environment:
      PYTHONPATH: /code/groceries/groceries/
  walmart:
    volumes:
    - ./scrapy/code:/code
    build: 
      context: scrapy/
      dockerfile: Dockerfile.runtime
    hostname: walmart-scrapy
    depends_on:
    - splash-middleware
    - db
    - adminer
    networks:
    - backend
    working_dir: /code/groceries/groceries/spiders/walmart
    entrypoint: "/usr/local/bin/scrapy runspider scraper.py"
    environment:
      PYTHONPATH: /code/groceries/groceries/
  db:
    hostname: db
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    networks:
      - backend
    environment:
      MYSQL_DATABASE: db
      MYSQL_USER: root
      MYSQL_PASSWORD: example
      MYSQL_ROOT_PASSWORD: example
    volumes:
      #- ./schema:/docker-entrypopint-initdb.d
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
  adminer:
    hostname: adminer
    image: adminer
    restart: unless-stopped
    networks:
      - backend
    depends_on:
      - db
    ports:
      - "8081:8080"
  flask:
    hostname: flask
    build: './flask/'
    restart: unless-stopped
    volumes:
      - ./flask/code:/code
      - ./upload:/code/app/upload
    ports:
      - "8080:80"
    networks:
      - backend
      - frontend
    environment:
      FLASK_CONFIG: development
      FLASK_APP: run.py
    depends_on:
      - db
networks:
  frontend:
  backend:

volumes:
   mysql-data:

